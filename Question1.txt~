Question 1) 
	   A.	
		- The sort of error that you expect to see is error: coin2.c: No such file or directory, this means either the 				headerfile that's  being included is non existent or it is not within the same directory as coin2.c

		- This situation depends on the first stage of Preprocessing since preprocessing is the first pass of any C 
                 	compilation. It processes include files, conditional compilation intructions and macros.

  		- This error occurs at the stage of Preprocessing since it is the first pass of any C compilation. as said above it 
                    processes include files, conditional compilation intructions and macros. So since this first part was unable to 
                     compile, then the rest of the part such as compilation, Assembly and linking doesnt occur.
  	  B. 
		- A socket is the first step in creating a network communication. It allows a process on one computer to communicate 			with a process on another computer. It provides an integer identifier through which a network communication will take 			place. Sockets have 3 arguments: the domain, the type of communication, and the protocol. These decide how socket will 			be used for communication.

  		What does it mean to bind a socket?
        	Second step in establishing a network communication depends upon wether the process will act as a server or a client. 			A server will bind the socket which defines the IP address and port on Which it will listen for connections

	C. 
        	- Signals are INTRA while sockets are INTER meaning... Signal system calls are used for interprocess communication 			between the O/S and an application (most commonly to terminate). Socket system calls are used for interprocess 			communication over a network, allowing a process on one computer to communicate with a process on another computer. 			Therefore signals are used to communicate within one computers process, while sockets are used to communicate over 			different computers processers.

  		What are the main differences between processes and threads?
		Proccesses are typically independent whereas threads exisit as subsets of processes. Processes have seperate
		addresses and call stacks whereas threads share those resources.
